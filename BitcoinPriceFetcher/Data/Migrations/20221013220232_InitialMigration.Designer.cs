// <auto-generated />
using System;
using BitcoinPriceFetcher.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BitcoinPriceFetcher.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221013220232_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BitcoinPriceFetcher.DomainEntities.BitcoinPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TimeStamp", "ProviderName" }, "IDX_TimeAndProvider")
                        .IsUnique();

                    b.ToTable("BitcoinPrices");
                });

            modelBuilder.Entity("BitcoinPriceFetcher.DomainEntities.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentationLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endpoint = "https://www.bitstamp.net/api/v2/ticker/btcusd/",
                            Name = "Bitstamp"
                        },
                        new
                        {
                            Id = 2,
                            Endpoint = "https://api.bitfinex.com/v1/pubticker/btcusd",
                            Name = "Bitfinex"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
